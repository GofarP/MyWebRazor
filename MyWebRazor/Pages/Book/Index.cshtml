@page
@model MyWebRazor.Pages.Book.IndexModel
@{
	ViewData["Title"] = "Book Index";
	var index = 1;
}

<a asp-page="Create" class="btn btn-primary" mb-2>Create New Book</a>


<div class="Card Shadow">
	<div class="card-header">
		<h3>@ViewData["Title"]</h3>
	</div>

	<div class="card-body">
		<form id="searchForm" method="get">
			<input id="searchBox" type="text" name="SearchTerm" value="@Model.SearchTerm" placeholder="Cari Judul Buku..." class="form-control" />
		</form>
		<table class="table table-stripped table-hover table-responsive">
			<thead>
				<tr>
					<th>No</th>
					<th>@Html.DisplayNameFor(model => model.Books[0].BookTitle)</th>
					<th>@Html.DisplayNameFor(model => model.Books[0].BookDescription)</th>
					<th>@Html.DisplayNameFor(model => model.Books[0].Author)</th>
					<th>Action</th>
				</tr>
			</thead>
			<tbody>
				@if(Model.Books != null && Model.Books.Any())
				{
					@foreach(var book in Model.Books)
					{
						<tr>
							<td>@index</td>
							<td>@Html.DisplayFor(model=> book.BookTitle)</td>
							<td>@Html.DisplayFor(model => book.BookDescription)</td>
							<td>@Html.DisplayFor(model => book.Author)</td>
							<td>
								<a asp-page="Edit" asp-route-id="@book.id" class="btn btn-warning">Edit</a>
								<form method="post" asp-page-handler="Delete" asp-route-id="@book.id"
								onsubmit="return confirm('Are You Sure  You Want To Delete This Book?')" style="display:inline">
									<button type="submit" class="btn btn-danger">Delete</button>
								</form>
							</td>
						</tr>

						index++;
					}
				}
				else{
					<tr>
						<td colspan="5" class="text-center">
							No Books Available At This Moment.
						</td>
					</tr>
				}
			</tbody>
		</table>
	</div>
</div>

<script>
	let timer;
	const input = document.getElementById("searchBox");

	input.focus();

	input.addEventListener("input", function () {
		clearTimeout(timer);
		timer = setTimeout(() => {
			const searchTerm = input.value;

			fetch(`/Book/Index?SearchTerm=${encodeURIComponent(searchTerm)}`)
				.then(response => response.text())
				.then(html => {
					// Replace only the table or content part
					const parser = new DOMParser();
					const doc = parser.parseFromString(html, 'text/html');
					const newTable = doc.querySelector('table');
					const oldTable = document.querySelector('table');
					if (newTable && oldTable) {
						oldTable.replaceWith(newTable);
					}
				});
		}, 500);
	});
</script>
